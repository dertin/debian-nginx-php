sudo: required

branches:
  only:
    - develop

services:
  - docker

language: bash

before_install:
  - docker build -t dertin/debian:lemp -f Dockerfile.debug .
  - docker run -t --name container_test dertin/debian:lemp /bin/bash -c "/root/workspace/install.sh travis Y"
  - docker start container_test
  - docker ps -a

# Test
script:
  - docker exec -t container_test /bin/bash -c "/usr/bin/openssl version"
  - docker exec -t container_test /bin/bash -c "/usr/local/bin/cmake --version"
  - docker exec -t container_test /bin/bash -c "/usr/local/bin/curl -V"
  - docker exec -t container_test /bin/bash -c "/usr/local/bin/python --version"
  - docker exec -t container_test /bin/bash -c "/usr/local/bin/pip -V"
  - docker exec -t container_test /bin/bash -c "/usr/local/bin/python3.7 --version"
  - docker exec -t container_test /bin/bash -c "/usr/local/bin/python3.7 -m pip -V"
  - docker exec -t container_test /bin/bash -c "/usr/local/php7/bin/php -v"
  - docker exec -t container_test /bin/bash -c "/usr/local/php7/bin/php -i | grep 'Client API version'"
  - docker exec -t container_test /bin/bash -c "/usr/sbin/nginx -v"
  - docker exec -t container_test /bin/bash -c "service php7-fpm start"
  - docker exec -t container_test /bin/bash -c "service nginx start"
  - docker exec -t container_test /bin/bash -c "/opt/letsencrypt/certbot-auto --version --quiet"
  - docker exec -t container_test /bin/bash -c "/opt/letsencrypt/certbot-auto --debug --os-packages-only --quiet"


#after_success:
#after_failure:

after_script:
  - docker stop container_test
  - docker rm $(docker ps -a -q)

notifications:
  email: false
