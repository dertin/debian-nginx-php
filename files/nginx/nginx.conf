user www-data www-data;
pid /var/run/nginx.pid;

# you must set worker processes based on your CPU cores, nginx does not benefit from setting more than that
worker_processes auto; #some last versions calculate it automatically

# number of file descriptors used for nginx
# the limit for the maximum FDs on the server is usually set by the OS.
# if you don't set FD's then OS settings will be used which is by default 2000
# worker_rlimit_nofile 100000; # SEE: https://github.com/denji/nginx-tuning#nolimit-with-systemd

# only log critical errors
error_log /var/log/nginx/error.log crit;
#error_log /var/log/nginx/notice.log notice;
#error_log /var/log/nginx/debug.log debug;

# provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # determines how much clients will be served per worker
    # max clients = worker_connections * worker_processes
    # max clients is also limited by the number of socket connections available on the system (~64k)
    worker_connections 1024;

    # optmized to serve many clients with each thread, essential for linux -- for testing environment
    use epoll;

    # accept as many connections as possible, may flood worker connections if set too low -- for testing environment
    multi_accept on;

    # If accept_mutex is enabled, worker processes will accept new connections by turn
    accept_mutex off;
}

http {

  ##################
  # Basic Settings #
  ##################

    # cache informations about FDs, frequently accessed files
    # can boost performance, but you need to test those values
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 5;
    open_file_cache_errors on;

    #log_format gzip '$remote_addr - $remote_user [$time_local]  '
    #          '"$request" $status $bytes_sent '
    #          '"$http_referer" "$http_user_agent" "$gzip_ratio"';

    #map $status $abnormal {
    #    ~^[23]  0;
    #    default 1;
    #}
    #access_log /var/log/nginx/access_abnormal.log combined if=$abnormal;

    # to boost I/O on HDD we can disable access logs
    access_log off;

    # copies data between one FD and other from within the kernel
    # faster then read() + write()
    sendfile on;

    # send headers in one peace, its better then sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    # reduce the data that needs to be sent over network
    # If activated, check that there are no problems with the Pagespeed Module
    #gzip on;
    #gzip_vary on;
    #gzip_comp_level 6;
    #gzip_buffers 16 8k;
    #gzip_proxied any;
    #gzip_disable msie6;
    #gzip_types text/plain text/css text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss image/svg+xml;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    include /etc/nginx/snippets/ddos;

  ########################
  # Virtual Host Configs #
  ########################

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*.conf;

}
